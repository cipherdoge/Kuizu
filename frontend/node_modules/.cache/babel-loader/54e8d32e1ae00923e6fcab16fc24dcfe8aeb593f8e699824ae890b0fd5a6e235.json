{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      searchQuery: \"\",\n      searchType: \"subjects\",\n      searchResults: [],\n      searchPerformed: false\n    };\n  },\n  methods: {\n    async search() {\n      if (!this.searchQuery.trim()) {\n        alert(\"Please enter a search query.\");\n        return;\n      }\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        alert(\"Authentication token missing. Please log in.\");\n        return;\n      }\n      try {\n        const response = await axios.get(\"/api/admin/search\", {\n          params: {\n            query: this.searchQuery,\n            type: this.searchType\n          },\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.searchResults = response.data.map(quiz => ({\n          ...quiz,\n          editing: false // Add an `editing` field to each quiz item\n        }));\n        this.searchPerformed = true;\n      } catch (error) {\n        console.error(\"Error during search:\", error);\n        this.handleError(error);\n      }\n    },\n    enableEdit(index) {\n      this.searchResults[index].editing = true;\n    },\n    async saveEdit(index, result) {\n      try {\n        const token = localStorage.getItem(\"token\");\n        await axios.put(`/api/admin/updatequizzes/${result.id}`, {\n          remarks: result.remarks,\n          chapter_id: result.chapter_id\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.searchResults[index].editing = false;\n      } catch (error) {\n        console.error(\"Error updating quiz:\", error);\n        this.handleError(error);\n      }\n    },\n    cancelEdit(index) {\n      this.searchResults[index].editing = false;\n      this.search(); // Refresh data from API to restore original values\n    },\n    async deleteQuiz(quizId) {\n      if (!confirm(\"Are you sure you want to delete this quiz?\")) return;\n      try {\n        const token = localStorage.getItem(\"token\");\n        await axios.delete(`/api/admin/deletequiz/${quizId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.searchResults = this.searchResults.filter(quiz => quiz.id !== quizId);\n      } catch (error) {\n        console.error(\"Error deleting quiz:\", error);\n        this.handleError(error);\n      }\n    },\n    handleError(error) {\n      if (error.response?.status === 401) {\n        alert(\"Unauthorized access. Please log in again.\");\n      } else if (error.response?.status === 403) {\n        alert(\"Admin access required.\");\n      } else if (error.response?.status === 422) {\n        alert(\"Invalid search query or parameters.\");\n      } else {\n        alert(\"An error occurred. Please try again.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","searchQuery","searchType","searchResults","searchPerformed","methods","search","trim","alert","token","localStorage","getItem","response","get","params","query","type","headers","Authorization","map","quiz","editing","error","console","handleError","enableEdit","index","saveEdit","result","put","id","remarks","chapter_id","cancelEdit","deleteQuiz","quizId","confirm","delete","filter","status"],"sources":["/home/ritvik/quiz_master_v2/Kuizu/frontend/src/components/ManageQuiz.vue"],"sourcesContent":["<template>\n  <div class=\"manage-quiz-container\">\n    <h1>Manage Quizzes</h1>\n\n    <!-- Search Section -->\n    <div class=\"search-section\">\n      <input\n        v-model=\"searchQuery\"\n        placeholder=\"Search users, subjects, or quizzes...\"\n        class=\"search-input\"\n      />\n      <select v-model=\"searchType\" class=\"search-select\">\n        <option value=\"users\">Users</option>\n        <option value=\"subjects\">Subjects</option>\n        <option value=\"quizzes\">Quizzes</option>\n      </select>\n      <button @click=\"search\" type=\"button\" class=\"btn btn-primary\">Search</button>\n    </div>\n\n    <!-- Search Results -->\n    <div v-if=\"searchPerformed\">\n      <h2 v-if=\"searchResults.length\">Search Results</h2>\n      <p v-else>No results found for your query.</p>\n      <div class=\"results-list\">\n        <template v-if=\"searchType === 'quizzes'\">\n          <div v-for=\"(result, index) in searchResults\" :key=\"result.id\" class=\"result-item\">\n            <p><strong>ID:</strong> {{ result.id }}</p>\n            <p><strong>Remarks:</strong> \n              <span v-if=\"!result.editing\">{{ result.remarks }}</span>\n              <input v-else v-model=\"result.remarks\" />\n            </p>\n            <p><strong>Chapter ID:</strong> \n              <span v-if=\"!result.editing\">{{ result.chapter_id }}</span>\n              <input v-else v-model=\"result.chapter_id\" />\n            </p>\n            <button v-if=\"!result.editing\" @click=\"enableEdit(index)\" class=\"btn btn-warning\">Edit</button>\n            <button v-if=\"result.editing\" @click=\"saveEdit(index, result)\" class=\"btn btn-success\">Save</button>\n            <button v-if=\"result.editing\" @click=\"cancelEdit(index)\" class=\"btn btn-secondary\">Cancel</button>\n            <button @click=\"deleteQuiz(result.id)\" class=\"btn btn-danger\">Delete</button>\n          </div>\n        </template>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      searchQuery: \"\",\n      searchType: \"subjects\",\n      searchResults: [],\n      searchPerformed: false,\n    };\n  },\n  methods: {\n    async search() {\n      if (!this.searchQuery.trim()) {\n        alert(\"Please enter a search query.\");\n        return;\n      }\n\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        alert(\"Authentication token missing. Please log in.\");\n        return;\n      }\n\n      try {\n        const response = await axios.get(\"/api/admin/search\", {\n          params: {\n            query: this.searchQuery,\n            type: this.searchType,\n          },\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        this.searchResults = response.data.map(quiz => ({\n          ...quiz,\n          editing: false, // Add an `editing` field to each quiz item\n        }));\n        this.searchPerformed = true;\n      } catch (error) {\n        console.error(\"Error during search:\", error);\n        this.handleError(error);\n      }\n    },\n    \n    enableEdit(index) {\n      this.searchResults[index].editing = true;\n    },\n\n    async saveEdit(index, result) {\n      try {\n        const token = localStorage.getItem(\"token\");\n        await axios.put(`/api/admin/updatequizzes/${result.id}`, {\n          remarks: result.remarks,\n          chapter_id: result.chapter_id,\n        }, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        this.searchResults[index].editing = false;\n      } catch (error) {\n        console.error(\"Error updating quiz:\", error);\n        this.handleError(error);\n      }\n    },\n\n    cancelEdit(index) {\n      this.searchResults[index].editing = false;\n      this.search(); // Refresh data from API to restore original values\n    },\n\n    async deleteQuiz(quizId) {\n      if (!confirm(\"Are you sure you want to delete this quiz?\")) return;\n\n      try {\n        const token = localStorage.getItem(\"token\");\n        await axios.delete(`/api/admin/deletequiz/${quizId}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        this.searchResults = this.searchResults.filter(quiz => quiz.id !== quizId);\n      } catch (error) {\n        console.error(\"Error deleting quiz:\", error);\n        this.handleError(error);\n      }\n    },\n\n    handleError(error) {\n      if (error.response?.status === 401) {\n        alert(\"Unauthorized access. Please log in again.\");\n      } else if (error.response?.status === 403) {\n        alert(\"Admin access required.\");\n      } else if (error.response?.status === 422) {\n        alert(\"Invalid search query or parameters.\");\n      } else {\n        alert(\"An error occurred. Please try again.\");\n      }\n    },\n  },\n};\n</script>\n\n<style>\n.manage-quiz-container {\n  padding: 20px;\n}\n\n.search-section {\n  margin-bottom: 20px;\n}\n\n.search-input {\n  padding: 5px;\n  margin-right: 10px;\n}\n\n.search-select {\n  margin-right: 10px;\n}\n\n.results-list {\n  margin-top: 20px;\n}\n\n.result-item {\n  border: 1px solid #ddd;\n  padding: 10px;\n  margin-bottom: 10px;\n}\n\n.btn {\n  margin-right: 5px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}