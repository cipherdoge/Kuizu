{"ast":null,"code":"import axios from 'axios';\nimport { ref, onMounted } from 'vue';\nexport default {\n  name: 'UserDashboard',\n  setup() {\n    const userStats = ref(null);\n    const loading = ref(true);\n    const error = ref('');\n\n    // Fetch user dashboard data\n    const fetchUserDashboard = async () => {\n      const token = localStorage.getItem('access_token');\n\n      // Check if the token is available before making the request\n      if (!token) {\n        error.value = 'No token found. Please log in again.';\n        loading.value = false;\n        return;\n      }\n      try {\n        const response = await axios.get('/api/user/dashboard/summary', {\n          headers: {\n            Authorization: `Bearer ${token}` // Include JWT token\n          }\n        });\n        userStats.value = response.data.statistics;\n        loading.value = false;\n      } catch (err) {\n        // Handling specific error scenarios (401 Unauthorized, 500 Internal Server Error)\n        if (err.response && err.response.status === 401) {\n          error.value = 'Unauthorized. Please log in again.';\n        } else {\n          error.value = 'Failed to load user dashboard data. Please try again later.';\n        }\n        loading.value = false;\n      }\n    };\n\n    // Call fetchUserDashboard when the component is mounted\n    onMounted(fetchUserDashboard);\n    return {\n      userStats,\n      loading,\n      error\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","onMounted","name","setup","userStats","loading","error","fetchUserDashboard","token","localStorage","getItem","value","response","get","headers","Authorization","data","statistics","err","status"],"sources":["/home/ritvik/quiz_master_v2/Kuizu/frontend/src/components/UserDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"user-dashboard\">\n    <h1>User Dashboard</h1>\n    \n    <!-- Displaying User Statistics -->\n    <div v-if=\"userStats\">\n      <h2>Statistics</h2>\n      <p>Total Attempts: {{ userStats.total_attempts }}</p>\n      <p>Average Score: {{ userStats.average_score.toFixed(2) }}%</p>\n      \n      <!-- Displaying Recent Attempts -->\n      <h3>Recent Attempts</h3>\n      <ul v-if=\"userStats.recent_attempts.length\">\n        <li v-for=\"attempt in userStats.recent_attempts\" :key=\"attempt.quiz_id\">\n          <strong>{{ attempt.chapter_name }}:</strong> Score: {{ attempt.score }}% \n          <br>\n          Date: {{ attempt.attempt_date }}\n        </li>\n      </ul>\n      <p v-else>No recent attempts</p>\n    </div>\n    \n    <!-- Error or Loading State -->\n    <div v-else>\n      <p v-if=\"loading\">Loading...</p>\n      <p v-else-if=\"error\">{{ error }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { ref, onMounted } from 'vue';\n\nexport default {\n  name: 'UserDashboard',\n  setup() {\n    const userStats = ref(null);\n    const loading = ref(true);\n    const error = ref('');\n\n    // Fetch user dashboard data\n    const fetchUserDashboard = async () => {\n  const token = localStorage.getItem('access_token');\n  \n  // Check if the token is available before making the request\n  if (!token) {\n    error.value = 'No token found. Please log in again.';\n    loading.value = false;\n    return;\n  }\n\n  try {\n    const response = await axios.get('/api/user/dashboard/summary', {\n      headers: {\n        Authorization: `Bearer ${token}`, // Include JWT token\n      },\n    });\n    userStats.value = response.data.statistics;\n    loading.value = false;\n  } catch (err) {\n    // Handling specific error scenarios (401 Unauthorized, 500 Internal Server Error)\n    if (err.response && err.response.status === 401) {\n      error.value = 'Unauthorized. Please log in again.';\n    } else {\n      error.value = 'Failed to load user dashboard data. Please try again later.';\n    }\n    loading.value = false;\n  }\n};\n\n\n    // Call fetchUserDashboard when the component is mounted\n    onMounted(fetchUserDashboard);\n\n    return { userStats, loading, error };\n  },\n};\n</script>\n\n<style scoped>\n.user-dashboard {\n  padding: 20px;\n  max-width: 800px;\n  margin: auto;\n}\n\nh1 {\n  font-size: 2em;\n  margin-bottom: 20px;\n}\n\nh2, h3 {\n  margin-top: 20px;\n  font-size: 1.5em;\n}\n\nul {\n  list-style-type: none;\n  padding-left: 0;\n}\n\nli {\n  margin-bottom: 10px;\n}\n</style>\n"],"mappings":"AA+BA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,GAAG,EAAEC,SAAQ,QAAS,KAAK;AAEpC,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,KAAKA,CAAA,EAAG;IACN,MAAMC,SAAQ,GAAIJ,GAAG,CAAC,IAAI,CAAC;IAC3B,MAAMK,OAAM,GAAIL,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMM,KAAI,GAAIN,GAAG,CAAC,EAAE,CAAC;;IAErB;IACA,MAAMO,kBAAiB,GAAI,MAAAA,CAAA,KAAY;MACzC,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;;MAElD;MACA,IAAI,CAACF,KAAK,EAAE;QACVF,KAAK,CAACK,KAAI,GAAI,sCAAsC;QACpDN,OAAO,CAACM,KAAI,GAAI,KAAK;QACrB;MACF;MAEA,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAAC,6BAA6B,EAAE;UAC9DC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUP,KAAK,EAAE,CAAE;UACpC;QACF,CAAC,CAAC;QACFJ,SAAS,CAACO,KAAI,GAAIC,QAAQ,CAACI,IAAI,CAACC,UAAU;QAC1CZ,OAAO,CAACM,KAAI,GAAI,KAAK;MACvB,EAAE,OAAOO,GAAG,EAAE;QACZ;QACA,IAAIA,GAAG,CAACN,QAAO,IAAKM,GAAG,CAACN,QAAQ,CAACO,MAAK,KAAM,GAAG,EAAE;UAC/Cb,KAAK,CAACK,KAAI,GAAI,oCAAoC;QACpD,OAAO;UACLL,KAAK,CAACK,KAAI,GAAI,6DAA6D;QAC7E;QACAN,OAAO,CAACM,KAAI,GAAI,KAAK;MACvB;IACF,CAAC;;IAGG;IACAV,SAAS,CAACM,kBAAkB,CAAC;IAE7B,OAAO;MAAEH,SAAS;MAAEC,OAAO;MAAEC;IAAM,CAAC;EACtC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}