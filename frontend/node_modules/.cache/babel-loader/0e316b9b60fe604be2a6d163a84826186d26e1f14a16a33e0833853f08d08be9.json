{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'UserRegister',\n  data() {\n    return {\n      formData: {\n        username: '',\n        password: '',\n        dob: '',\n        qualification: ''\n      },\n      error: null\n    };\n  },\n  methods: {\n    async register() {\n      try {\n        // Format date to DD/MM/YYYY\n        const dateObj = new Date(this.formData.dob);\n        const formattedDate = `${String(dateObj.getDate()).padStart(2, '0')}/${String(dateObj.getMonth() + 1).padStart(2, '0')}/${dateObj.getFullYear()}`;\n        const response = await axios.post('http://localhost:5000/api/register', {\n          username: this.formData.username,\n          password: this.formData.password,\n          is_admin: false,\n          dob: formattedDate,\n          qualification: this.formData.qualification\n        });\n        if (response.status === 201) {\n          this.$router.push('/login');\n        }\n      } catch (err) {\n        this.error = err.response?.data?.error || 'Registration failed';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","formData","username","password","dob","qualification","error","methods","register","dateObj","Date","formattedDate","String","getDate","padStart","getMonth","getFullYear","response","post","is_admin","status","$router","push","err"],"sources":["/home/ritvik/quiz_master_v2/Kuizu/frontend/src/components/UserRegister.vue"],"sourcesContent":["<template>\n  <div class=\"register-container\">\n    <h2>User Registration</h2>\n    <form @submit.prevent=\"register\" class=\"register-form\">\n      <div class=\"form-group\">\n        <label for=\"username\">Username:</label>\n        <input \n          type=\"text\"\n          id=\"username\"\n          v-model=\"formData.username\"\n          required\n        >\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"password\">Password:</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          v-model=\"formData.password\"\n          required\n        >\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"dob\">Date of Birth:</label>\n        <input\n          type=\"date\"\n          id=\"dob\"\n          v-model=\"formData.dob\"\n          required\n        >\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"qualification\">Qualification:</label>\n        <input\n          type=\"text\"\n          id=\"qualification\"\n          v-model=\"formData.qualification\"\n          required\n        >\n      </div>\n\n      <button type=\"submit\">Register</button>\n    </form>\n\n    <div v-if=\"error\" class=\"error\">\n      {{ error }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'UserRegister',\n  data() {\n    return {\n      formData: {\n        username: '',\n        password: '',\n        dob: '',\n        qualification: '',\n      },\n      error: null\n    }\n  },\n  methods: {\n    async register() {\n      try {\n        // Format date to DD/MM/YYYY\n        const dateObj = new Date(this.formData.dob)\n        const formattedDate = `${String(dateObj.getDate()).padStart(2, '0')}/${String(dateObj.getMonth() + 1).padStart(2, '0')}/${dateObj.getFullYear()}`\n        \n        const response = await axios.post('http://localhost:5000/api/register', {\n          username: this.formData.username,\n          password: this.formData.password,\n          is_admin: false,\n          dob: formattedDate,\n          qualification: this.formData.qualification\n        })\n\n        if (response.status === 201) {\n          this.$router.push('/login')\n        }\n      } catch (err) {\n        this.error = err.response?.data?.error || 'Registration failed'\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.register-container {\n  max-width: 400px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.register-form {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n}\n\ninput {\n  padding: 8px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\nbutton {\n  padding: 10px;\n  background-color: #34495e;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #34495e;\n}\n\n.error {\n  color: red;\n  margin-top: 10px;\n  text-align: center;\n}\n</style>\n"],"mappings":";AAsDA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QACRC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,GAAG,EAAE,EAAE;QACPC,aAAa,EAAE;MACjB,CAAC;MACDC,KAAK,EAAE;IACT;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,QAAQA,CAAA,EAAG;MACf,IAAI;QACF;QACA,MAAMC,OAAM,GAAI,IAAIC,IAAI,CAAC,IAAI,CAACT,QAAQ,CAACG,GAAG;QAC1C,MAAMO,aAAY,GAAI,GAAGC,MAAM,CAACH,OAAO,CAACI,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIF,MAAM,CAACH,OAAO,CAACM,QAAQ,CAAC,IAAI,CAAC,CAAC,CAACD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIL,OAAO,CAACO,WAAW,CAAC,CAAC,EAAC;QAEhJ,MAAMC,QAAO,GAAI,MAAMnB,KAAK,CAACoB,IAAI,CAAC,oCAAoC,EAAE;UACtEhB,QAAQ,EAAE,IAAI,CAACD,QAAQ,CAACC,QAAQ;UAChCC,QAAQ,EAAE,IAAI,CAACF,QAAQ,CAACE,QAAQ;UAChCgB,QAAQ,EAAE,KAAK;UACff,GAAG,EAAEO,aAAa;UAClBN,aAAa,EAAE,IAAI,CAACJ,QAAQ,CAACI;QAC/B,CAAC;QAED,IAAIY,QAAQ,CAACG,MAAK,KAAM,GAAG,EAAE;UAC3B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ;QAC5B;MACF,EAAE,OAAOC,GAAG,EAAE;QACZ,IAAI,CAACjB,KAAI,GAAIiB,GAAG,CAACN,QAAQ,EAAEjB,IAAI,EAAEM,KAAI,IAAK,qBAAoB;MAChE;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}