{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport axios from 'axios';\nimport { ref, onMounted } from 'vue';\nimport { Bar, Line } from 'vue-chartjs';\nimport { defineComponent } from 'vue';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\n\n// Register components\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\n\n// Register the Chart.js components\nChartJS.register(Bar, Line);\nexport default defineComponent({\n  name: 'UserDashboard',\n  components: {\n    BarChart: Bar,\n    LineChart: Line\n  },\n  setup() {\n    const userStats = ref(null);\n    const loading = ref(true);\n    const error = ref('');\n    const statisticsChartData = ref({\n      labels: ['Total Attempts', 'Average Score'],\n      datasets: [{\n        label: 'User Stats',\n        data: [0, 0],\n        // Default data, will be updated after fetching\n        backgroundColor: ['#42A5F5', '#66BB6A'],\n        borderColor: ['#42A5F5', '#66BB6A'],\n        borderWidth: 1\n      }]\n    });\n    const recentAttemptsChartData = ref({\n      labels: [],\n      // Quiz dates will be added here\n      datasets: [{\n        label: 'Scores of Recent Attempts',\n        data: [],\n        // Scores will be added here\n        fill: false,\n        borderColor: '#FF5733',\n        tension: 0.1\n      }]\n    });\n\n    // Fetch user dashboard data\n    const fetchUserDashboard = async () => {\n      console.log('Fetching user dashboard...');\n      const token = localStorage.getItem('token');\n      if (!token) {\n        error.value = 'No token found. Please log in again.';\n        loading.value = false;\n        return;\n      }\n      try {\n        const response = await axios.get('/api/user/dashboard/summary', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Response:', response);\n        userStats.value = {\n          ...response.data.statistics,\n          recent_attempts: response.data.recent_attempts\n        };\n\n        // Update the statistics chart data\n        statisticsChartData.value.datasets[0].data = [userStats.value.total_attempts, userStats.value.average_score];\n\n        // Update the recent attempts chart data\n        recentAttemptsChartData.value.labels = userStats.value.recent_attempts.map(attempt => attempt.attempt_date);\n        recentAttemptsChartData.value.datasets[0].data = userStats.value.recent_attempts.map(attempt => attempt.score);\n        loading.value = false;\n      } catch (err) {\n        error.value = 'Failed to load user dashboard data. Please try again later.';\n        loading.value = false;\n      }\n    };\n\n    // Call fetchUserDashboard when the component is mounted\n    onMounted(fetchUserDashboard);\n    return {\n      userStats,\n      loading,\n      error,\n      statisticsChartData,\n      recentAttemptsChartData\n    };\n  }\n});","map":{"version":3,"names":["axios","ref","onMounted","Bar","Line","defineComponent","Chart","ChartJS","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","register","name","components","BarChart","LineChart","setup","userStats","loading","error","statisticsChartData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","recentAttemptsChartData","fill","tension","fetchUserDashboard","console","log","token","localStorage","getItem","value","response","get","headers","Authorization","statistics","recent_attempts","total_attempts","average_score","map","attempt","attempt_date","score","err"],"sources":["/home/ritvik/quiz_master_v2/Kuizu/frontend/src/components/UserDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"user-dashboard\">\n    <h1>User Dashboard</h1>\n    \n    <!-- Displaying User Statistics -->\n    <div v-if=\"userStats\">\n      <h2>Statistics</h2>\n      <p>Total Attempts: {{ userStats.total_attempts }}</p>\n      <p>Average Score: {{ userStats.average_score.toFixed(2) }}%</p>\n\n      <!-- Adding a Bar Chart for Statistics -->\n      <div class=\"chart-container\">\n        <BarChart :data=\"statisticsChartData\" />\n      </div>\n\n      <!-- Displaying Recent Attempts -->\n      <h3>Recent Attempts</h3>\n      <ul v-if=\"userStats.recent_attempts.length\">\n        <li v-for=\"attempt in userStats.recent_attempts\" :key=\"attempt.quiz_id\">\n          <strong>{{ attempt.chapter_name }}:</strong> Score: {{ attempt.score }}% \n          <br>\n          Date: {{ attempt.attempt_date }}\n        </li>\n      </ul>\n      <p v-else>No recent attempts</p>\n\n      <!-- Adding a Line Chart for Recent Attempts Scores -->\n      <div class=\"chart-container\">\n        <LineChart :data=\"recentAttemptsChartData\" />\n      </div>\n    </div>\n    \n    <!-- Error or Loading State -->\n    <div v-else>\n      <p v-if=\"loading\">Loading...</p>\n      <p v-else-if=\"error\">{{ error }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { ref, onMounted } from 'vue';\nimport { Bar, Line } from 'vue-chartjs';\nimport { defineComponent } from 'vue';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\n\n// Register components\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\n\n\n// Register the Chart.js components\nChartJS.register(Bar, Line);\n\nexport default defineComponent({\n  name: 'UserDashboard',\n  components: {\n    BarChart: Bar,\n    LineChart: Line\n  },\n  setup() {\n    const userStats = ref(null);\n    const loading = ref(true);\n    const error = ref('');\n    \n    const statisticsChartData = ref({\n      labels: ['Total Attempts', 'Average Score'],\n      datasets: [{\n        label: 'User Stats',\n        data: [0, 0], // Default data, will be updated after fetching\n        backgroundColor: ['#42A5F5', '#66BB6A'],\n        borderColor: ['#42A5F5', '#66BB6A'],\n        borderWidth: 1\n      }]\n    });\n\n    const recentAttemptsChartData = ref({\n      labels: [], // Quiz dates will be added here\n      datasets: [{\n        label: 'Scores of Recent Attempts',\n        data: [], // Scores will be added here\n        fill: false,\n        borderColor: '#FF5733',\n        tension: 0.1\n      }]\n    });\n\n    // Fetch user dashboard data\n    const fetchUserDashboard = async () => {\n      console.log('Fetching user dashboard...');\n      const token = localStorage.getItem('token');\n\n      if (!token) {\n        error.value = 'No token found. Please log in again.';\n        loading.value = false;\n        return;\n      }\n\n      try {\n        const response = await axios.get('/api/user/dashboard/summary', {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        console.log('Response:', response);\n\n        userStats.value = {\n          ...response.data.statistics,\n          recent_attempts: response.data.recent_attempts\n        };\n\n        // Update the statistics chart data\n        statisticsChartData.value.datasets[0].data = [\n          userStats.value.total_attempts,\n          userStats.value.average_score\n        ];\n\n        // Update the recent attempts chart data\n        recentAttemptsChartData.value.labels = userStats.value.recent_attempts.map(attempt => attempt.attempt_date);\n        recentAttemptsChartData.value.datasets[0].data = userStats.value.recent_attempts.map(attempt => attempt.score);\n\n        loading.value = false;\n      } catch (err) {\n        error.value = 'Failed to load user dashboard data. Please try again later.';\n        loading.value = false;\n      }\n    };\n\n    // Call fetchUserDashboard when the component is mounted\n    onMounted(fetchUserDashboard);\n\n    return { userStats, loading, error, statisticsChartData, recentAttemptsChartData };\n  },\n});\n</script>\n\n<style scoped>\n.user-dashboard {\n  padding: 20px;\n  max-width: 800px;\n  margin: auto;\n}\n\nh1 {\n  font-size: 2em;\n  margin-bottom: 20px;\n}\n\nh2, h3 {\n  margin-top: 20px;\n  font-size: 1.5em;\n}\n\nul {\n  list-style-type: none;\n  padding-left: 0;\n}\n\nli {\n  margin-bottom: 10px;\n}\n\n.chart-container {\n  margin-top: 20px;\n  height: 300px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}