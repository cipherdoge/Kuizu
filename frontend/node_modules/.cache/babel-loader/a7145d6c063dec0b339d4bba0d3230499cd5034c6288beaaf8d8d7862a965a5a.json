{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  name: 'UserHome',\n  setup() {\n    const router = useRouter();\n    const subjects = ref([]);\n    const chapters = ref([]);\n    const quizzes = ref([]);\n    const selectedSubject = ref('');\n    const selectedChapter = ref('');\n    const selectedQuiz = ref('');\n    const loading = ref(false); // Loading state\n\n    const loadSubjects = async () => {\n      loading.value = true;\n      try {\n        const response = await axios.get('/api/subjects');\n        subjects.value = response.data;\n      } catch (error) {\n        console.error('Error loading subjects:', error);\n        alert('Failed to load subjects. Please try again later.');\n      } finally {\n        loading.value = false;\n      }\n    };\n    const loadChapters = async () => {\n      if (!selectedSubject.value) {\n        chapters.value = [];\n        return;\n      }\n      loading.value = true;\n      try {\n        const response = await axios.get(`/api/subjects/${selectedSubject.value}/chapters`);\n        chapters.value = response.data;\n        selectedChapter.value = '';\n        selectedQuiz.value = '';\n      } catch (error) {\n        console.error('Error loading chapters:', error);\n        alert('Failed to load chapters. Please try again later.');\n      } finally {\n        loading.value = false;\n      }\n    };\n    const loadQuizzes = async () => {\n      if (!selectedChapter.value) {\n        quizzes.value = [];\n        return;\n      }\n      loading.value = true;\n      try {\n        const response = await axios.get(`/api/chapters/${selectedChapter.value}/quizzes`);\n        quizzes.value = response.data;\n        selectedQuiz.value = '';\n      } catch (error) {\n        console.error('Error loading quizzes:', error);\n        alert('Failed to load quizzes. Please try again later.');\n      } finally {\n        loading.value = false;\n      }\n    };\n    const formatDate = dateString => {\n      return new Date(dateString).toLocaleDateString();\n    };\n    const formatDuration = duration => {\n      const [hours, minutes] = duration.split(':');\n      return `${hours} hr ${minutes} min`;\n    };\n    const startQuiz = () => {\n      if (selectedQuiz.value) {\n        router.push(`/quiz/${selectedQuiz.value}`);\n      }\n    };\n    const handleQuizStart = async () => {\n      if (selectedQuiz.value) {\n        loading.value = true;\n        try {\n          // Make API call to backend to update database\n          await axios.post('/api/quiz-starts', {\n            quiz_id: selectedQuiz.value\n          });\n          router.push('/user-dashboard');\n        } catch (error) {\n          console.error('Error starting quiz:', error);\n          alert('Failed to start quiz. Please try again later.');\n        } finally {\n          loading.value = false;\n        }\n      }\n    };\n    onMounted(() => {\n      loadSubjects();\n    });\n    return {\n      subjects,\n      chapters,\n      quizzes,\n      selectedSubject,\n      selectedChapter,\n      selectedQuiz,\n      loading,\n      loadChapters,\n      loadQuizzes,\n      formatDate,\n      formatDuration,\n      startQuiz,\n      handleQuizStart\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRouter","axios","name","setup","router","subjects","chapters","quizzes","selectedSubject","selectedChapter","selectedQuiz","loading","loadSubjects","value","response","get","data","error","console","alert","loadChapters","loadQuizzes","formatDate","dateString","Date","toLocaleDateString","formatDuration","duration","hours","minutes","split","startQuiz","push","handleQuizStart","post","quiz_id"],"sources":["/home/ritvik/quiz_master_v2/Kuizu/frontend/src/components/SelectQuiz.vue"],"sourcesContent":["<template>\n  <div class=\"quiz-selector\">\n    <h2>Select a Quiz</h2>\n\n    <div v-if=\"loading\" class=\"loading\">Loading...</div>\n\n    <div v-else class=\"selector-container\">\n      <!-- Subject Selection -->\n      <div class=\"select-group\">\n        <label for=\"subject\">Select Subject:</label>\n        <select v-model=\"selectedSubject\" @change=\"loadChapters\" id=\"subject\">\n          <option value=\"\">Choose a subject</option>\n          <option v-for=\"subject in subjects\" :key=\"subject.id\" :value=\"subject.id\">\n            {{ subject.name }}\n          </option>\n        </select>\n      </div>\n\n      <!-- Chapter Selection -->\n      <div class=\"select-group\">\n        <label for=\"chapter\">Select Chapter:</label>\n        <select v-model=\"selectedChapter\" @change=\"loadQuizzes\" id=\"chapter\" :disabled=\"!selectedSubject\">\n          <option value=\"\">Choose a chapter</option>\n          <option v-for=\"chapter in chapters\" :key=\"chapter.id\" :value=\"chapter.id\">\n            {{ chapter.name }}\n          </option>\n        </select>\n      </div>\n\n      <!-- Quiz Selection -->\n      <div class=\"select-group\">\n        <label for=\"quiz\">Select Quiz:</label>\n        <select v-model=\"selectedQuiz\" id=\"quiz\" :disabled=\"!selectedChapter\">\n          <option value=\"\">Choose a quiz</option>\n          <option v-for=\"quiz in quizzes\" :key=\"quiz.id\" :value=\"quiz.id\">\n            Quiz {{ quiz.id }} - {{ formatDate(quiz.date_of_quiz) }} ({{ formatDuration(quiz.time_duration) }})\n          </option>\n        </select>\n      </div>\n    </div>\n\n    <button \n      :disabled=\"!selectedQuiz\" \n      class=\"take-quiz-btn\"\n      @click=\"handleQuizStart\"\n    >\n      Take Quiz\n    </button>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport axios from 'axios'\n\nexport default {\n  name: 'UserHome',\n  setup() {\n    const router = useRouter()\n    const subjects = ref([])\n    const chapters = ref([])\n    const quizzes = ref([])\n    const selectedSubject = ref('')\n    const selectedChapter = ref('')\n    const selectedQuiz = ref('')\n    const loading = ref(false) // Loading state\n\n    const loadSubjects = async () => {\n      loading.value = true\n      try {\n        const response = await axios.get('/api/subjects')\n        subjects.value = response.data\n      } catch (error) {\n        console.error('Error loading subjects:', error)\n        alert('Failed to load subjects. Please try again later.')\n      } finally {\n        loading.value = false\n      }\n    }\n\n    const loadChapters = async () => {\n      if (!selectedSubject.value) {\n        chapters.value = []\n        return\n      }\n      loading.value = true\n      try {\n        const response = await axios.get(`/api/subjects/${selectedSubject.value}/chapters`)\n        chapters.value = response.data\n        selectedChapter.value = ''\n        selectedQuiz.value = ''\n      } catch (error) {\n        console.error('Error loading chapters:', error)\n        alert('Failed to load chapters. Please try again later.')\n      } finally {\n        loading.value = false\n      }\n    }\n\n    const loadQuizzes = async () => {\n      if (!selectedChapter.value) {\n        quizzes.value = []\n        return\n      }\n      loading.value = true\n      try {\n        const response = await axios.get(`/api/chapters/${selectedChapter.value}/quizzes`)\n        quizzes.value = response.data\n        selectedQuiz.value = ''\n      } catch (error) {\n        console.error('Error loading quizzes:', error)\n        alert('Failed to load quizzes. Please try again later.')\n      } finally {\n        loading.value = false\n      }\n    }\n\n    const formatDate = (dateString) => {\n      return new Date(dateString).toLocaleDateString()\n    }\n\n    const formatDuration = (duration) => {\n      const [hours, minutes] = duration.split(':')\n      return `${hours} hr ${minutes} min`\n    }\n\n    const startQuiz = () => {\n      if (selectedQuiz.value) {\n        router.push(`/quiz/${selectedQuiz.value}`)\n      }\n    }\n    const handleQuizStart = async () => {\n      if (selectedQuiz.value) {\n        loading.value = true\n        try {\n          // Make API call to backend to update database\n          await axios.post('/api/quiz-starts', {\n            quiz_id: selectedQuiz.value\n          })\n          router.push('/user-dashboard')\n        } catch (error) {\n          console.error('Error starting quiz:', error)\n          alert('Failed to start quiz. Please try again later.')\n        } finally {\n          loading.value = false\n        }\n      }\n    }\n    onMounted(() => {\n      loadSubjects()\n    })\n\n    return {\n      subjects,\n      chapters,\n      quizzes,\n      selectedSubject,\n      selectedChapter,\n      selectedQuiz,\n      loading,\n      loadChapters,\n      loadQuizzes,\n      formatDate,\n      formatDuration,\n      startQuiz,\n      handleQuizStart\n    }\n  }\n}\n</script>\n\n<style scoped>\n.quiz-selector {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.loading {\n  text-align: center;\n  font-size: 18px;\n  color: #888;\n}\n\n.selector-container {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-bottom: 30px;\n}\n\n.select-group {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\nselect {\n  padding: 8px;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n  font-size: 16px;\n}\n\nselect:disabled {\n  background-color: #f5f5f5;\n  cursor: not-allowed;\n}\n\n.take-quiz-btn {\n  padding: 12px 24px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 16px;\n  transition: background-color 0.3s;\n}\n\n.take-quiz-btn:hover {\n  background-color: #45a049;\n}\n\n.take-quiz-btn:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n</style>\n"],"mappings":";AAoDA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAI;AACnC,SAASC,SAAQ,QAAS,YAAW;AACrC,OAAOC,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIJ,SAAS,CAAC;IACzB,MAAMK,QAAO,GAAIP,GAAG,CAAC,EAAE;IACvB,MAAMQ,QAAO,GAAIR,GAAG,CAAC,EAAE;IACvB,MAAMS,OAAM,GAAIT,GAAG,CAAC,EAAE;IACtB,MAAMU,eAAc,GAAIV,GAAG,CAAC,EAAE;IAC9B,MAAMW,eAAc,GAAIX,GAAG,CAAC,EAAE;IAC9B,MAAMY,YAAW,GAAIZ,GAAG,CAAC,EAAE;IAC3B,MAAMa,OAAM,GAAIb,GAAG,CAAC,KAAK,GAAE;;IAE3B,MAAMc,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/BD,OAAO,CAACE,KAAI,GAAI,IAAG;MACnB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAAC,eAAe;QAChDV,QAAQ,CAACQ,KAAI,GAAIC,QAAQ,CAACE,IAAG;MAC/B,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK;QAC9CE,KAAK,CAAC,kDAAkD;MAC1D,UAAU;QACRR,OAAO,CAACE,KAAI,GAAI,KAAI;MACtB;IACF;IAEA,MAAMO,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAI,CAACZ,eAAe,CAACK,KAAK,EAAE;QAC1BP,QAAQ,CAACO,KAAI,GAAI,EAAC;QAClB;MACF;MACAF,OAAO,CAACE,KAAI,GAAI,IAAG;MACnB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAAC,iBAAiBP,eAAe,CAACK,KAAK,WAAW;QAClFP,QAAQ,CAACO,KAAI,GAAIC,QAAQ,CAACE,IAAG;QAC7BP,eAAe,CAACI,KAAI,GAAI,EAAC;QACzBH,YAAY,CAACG,KAAI,GAAI,EAAC;MACxB,EAAE,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK;QAC9CE,KAAK,CAAC,kDAAkD;MAC1D,UAAU;QACRR,OAAO,CAACE,KAAI,GAAI,KAAI;MACtB;IACF;IAEA,MAAMQ,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B,IAAI,CAACZ,eAAe,CAACI,KAAK,EAAE;QAC1BN,OAAO,CAACM,KAAI,GAAI,EAAC;QACjB;MACF;MACAF,OAAO,CAACE,KAAI,GAAI,IAAG;MACnB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAAC,iBAAiBN,eAAe,CAACI,KAAK,UAAU;QACjFN,OAAO,CAACM,KAAI,GAAIC,QAAQ,CAACE,IAAG;QAC5BN,YAAY,CAACG,KAAI,GAAI,EAAC;MACxB,EAAE,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK;QAC7CE,KAAK,CAAC,iDAAiD;MACzD,UAAU;QACRR,OAAO,CAACE,KAAI,GAAI,KAAI;MACtB;IACF;IAEA,MAAMS,UAAS,GAAKC,UAAU,IAAK;MACjC,OAAO,IAAIC,IAAI,CAACD,UAAU,CAAC,CAACE,kBAAkB,CAAC;IACjD;IAEA,MAAMC,cAAa,GAAKC,QAAQ,IAAK;MACnC,MAAM,CAACC,KAAK,EAAEC,OAAO,IAAIF,QAAQ,CAACG,KAAK,CAAC,GAAG;MAC3C,OAAO,GAAGF,KAAK,OAAOC,OAAO,MAAK;IACpC;IAEA,MAAME,SAAQ,GAAIA,CAAA,KAAM;MACtB,IAAIrB,YAAY,CAACG,KAAK,EAAE;QACtBT,MAAM,CAAC4B,IAAI,CAAC,SAAStB,YAAY,CAACG,KAAK,EAAE;MAC3C;IACF;IACA,MAAMoB,eAAc,GAAI,MAAAA,CAAA,KAAY;MAClC,IAAIvB,YAAY,CAACG,KAAK,EAAE;QACtBF,OAAO,CAACE,KAAI,GAAI,IAAG;QACnB,IAAI;UACF;UACA,MAAMZ,KAAK,CAACiC,IAAI,CAAC,kBAAkB,EAAE;YACnCC,OAAO,EAAEzB,YAAY,CAACG;UACxB,CAAC;UACDT,MAAM,CAAC4B,IAAI,CAAC,iBAAiB;QAC/B,EAAE,OAAOf,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK;UAC3CE,KAAK,CAAC,+CAA+C;QACvD,UAAU;UACRR,OAAO,CAACE,KAAI,GAAI,KAAI;QACtB;MACF;IACF;IACAd,SAAS,CAAC,MAAM;MACda,YAAY,CAAC;IACf,CAAC;IAED,OAAO;MACLP,QAAQ;MACRC,QAAQ;MACRC,OAAO;MACPC,eAAe;MACfC,eAAe;MACfC,YAAY;MACZC,OAAO;MACPS,YAAY;MACZC,WAAW;MACXC,UAAU;MACVI,cAAc;MACdK,SAAS;MACTE;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}