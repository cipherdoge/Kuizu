{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dashboard\"\n};\nconst _hoisted_2 = {\n  class: \"statistics-grid\"\n};\nconst _hoisted_3 = {\n  class: \"stat-card\"\n};\nconst _hoisted_4 = {\n  class: \"stat-value\"\n};\nconst _hoisted_5 = {\n  class: \"stat-card\"\n};\nconst _hoisted_6 = {\n  class: \"stat-value\"\n};\nconst _hoisted_7 = {\n  class: \"stat-card\"\n};\nconst _hoisted_8 = {\n  class: \"stat-value\"\n};\nconst _hoisted_9 = {\n  class: \"recent-scores\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[5] || (_cache[5] = _createElementVNode(\"h1\", null, \"Admin Dashboard\", -1 /* HOISTED */)), _createCommentVNode(\" Statistics Cards \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[0] || (_cache[0] = _createElementVNode(\"h3\", null, \"Total Users\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_4, _toDisplayString($data.statistics.total_users), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_5, [_cache[1] || (_cache[1] = _createElementVNode(\"h3\", null, \"Total Subjects\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_6, _toDisplayString($data.statistics.total_subjects), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_7, [_cache[2] || (_cache[2] = _createElementVNode(\"h3\", null, \"Total Quizzes\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_8, _toDisplayString($data.statistics.total_quizzes), 1 /* TEXT */)])]), _createCommentVNode(\" Recent Scores Table \"), _createElementVNode(\"div\", _hoisted_9, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"Recent Quiz Attempts\", -1 /* HOISTED */)), _createElementVNode(\"table\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"User\"), _createElementVNode(\"th\", null, \"Quiz ID\"), _createElementVNode(\"th\", null, \"Score\"), _createElementVNode(\"th\", null, \"Date\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.recentScores, score => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: score.quiz_id + score.timestamp\n    }, [_createElementVNode(\"td\", null, _toDisplayString(score.user), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(score.quiz_id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(score.score.toFixed(1)) + \"%\", 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(score.timestamp)), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","$data","statistics","total_users","_hoisted_5","_hoisted_6","total_subjects","_hoisted_7","_hoisted_8","total_quizzes","_hoisted_9","_Fragment","_renderList","recentScores","score","key","quiz_id","timestamp","user","toFixed","$options","formatDate"],"sources":["/home/ritvik/quiz_master_v2/Kuizu/frontend/src/components/AdminDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard\">\n    <h1>Admin Dashboard</h1>\n    \n    <!-- Statistics Cards -->\n    <div class=\"statistics-grid\">\n      <div class=\"stat-card\">\n        <h3>Total Users</h3>\n        <div class=\"stat-value\">{{ statistics.total_users }}</div>\n      </div>\n      <div class=\"stat-card\">\n        <h3>Total Subjects</h3>\n        <div class=\"stat-value\">{{ statistics.total_subjects }}</div>\n      </div>\n      <div class=\"stat-card\">\n        <h3>Total Quizzes</h3>\n        <div class=\"stat-value\">{{ statistics.total_quizzes }}</div>\n      </div>\n    </div>\n\n    <!-- Recent Scores Table -->\n    <div class=\"recent-scores\">\n      <h2>Recent Quiz Attempts</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>User</th>\n            <th>Quiz ID</th>\n            <th>Score</th>\n            <th>Date</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"score in recentScores\" :key=\"score.quiz_id + score.timestamp\">\n            <td>{{ score.user }}</td>\n            <td>{{ score.quiz_id }}</td>\n            <td>{{ score.score.toFixed(1) }}%</td>\n            <td>{{ formatDate(score.timestamp) }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'AdminDashboard',\n  data() {\n    return {\n      statistics: {\n        total_users: 0,\n        total_subjects: 0,\n        total_quizzes: 0\n      },\n      recentScores: []\n    }\n  },\n  methods: {\n    async fetchDashboardData() {\n      try {\n        const response = await axios.get('/api/admin/dashboard/summary', {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.statistics = response.data.statistics;\n        this.recentScores = response.data.recent_scores;\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n      }\n    },\n    formatDate(timestamp) {\n      return new Date(timestamp).toLocaleString();\n    }\n  },\n  mounted() {\n    this.fetchDashboardData();\n  }\n}\n</script>\n\n<style scoped>\n.dashboard {\n  padding: 20px;\n}\n\n.statistics-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 20px;\n  margin-bottom: 30px;\n}\n\n.stat-card {\n  background: #fff;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  text-align: center;\n}\n\n.stat-value {\n  font-size: 2em;\n  font-weight: bold;\n  color: #2c3e50;\n}\n\n.recent-scores {\n  background: #fff;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 15px;\n}\n\nth, td {\n  padding: 12px;\n  text-align: left;\n  border-bottom: 1px solid #eee;\n}\n\nth {\n  background-color: #f8f9fa;\n  font-weight: 600;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EAIfA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAW;;EAEfA,KAAK,EAAC;AAAY;;EAEpBA,KAAK,EAAC;AAAW;;EAEfA,KAAK,EAAC;AAAY;;EAEpBA,KAAK,EAAC;AAAW;;EAEfA,KAAK,EAAC;AAAY;;EAKtBA,KAAK,EAAC;AAAe;;uBApB5BC,mBAAA,CAyCM,OAzCNC,UAyCM,G,0BAxCJC,mBAAA,CAAwB,YAApB,iBAAe,sBAEnBC,mBAAA,sBAAyB,EACzBD,mBAAA,CAaM,OAbNE,UAaM,GAZJF,mBAAA,CAGM,OAHNG,UAGM,G,0BAFJH,mBAAA,CAAoB,YAAhB,aAAW,sBACfA,mBAAA,CAA0D,OAA1DI,UAA0D,EAAAC,gBAAA,CAA/BC,KAAA,CAAAC,UAAU,CAACC,WAAW,iB,GAEnDR,mBAAA,CAGM,OAHNS,UAGM,G,0BAFJT,mBAAA,CAAuB,YAAnB,gBAAc,sBAClBA,mBAAA,CAA6D,OAA7DU,UAA6D,EAAAL,gBAAA,CAAlCC,KAAA,CAAAC,UAAU,CAACI,cAAc,iB,GAEtDX,mBAAA,CAGM,OAHNY,UAGM,G,0BAFJZ,mBAAA,CAAsB,YAAlB,eAAa,sBACjBA,mBAAA,CAA4D,OAA5Da,UAA4D,EAAAR,gBAAA,CAAjCC,KAAA,CAAAC,UAAU,CAACO,aAAa,iB,KAIvDb,mBAAA,yBAA4B,EAC5BD,mBAAA,CAoBM,OApBNe,UAoBM,G,0BAnBJf,mBAAA,CAA6B,YAAzB,sBAAoB,sBACxBA,mBAAA,CAiBQ,gB,0BAhBNA,mBAAA,CAOQ,gBANNA,mBAAA,CAKK,aAJHA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAgB,YAAZ,SAAO,GACXA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAa,YAAT,MAAI,E,wBAGZA,mBAAA,CAOQ,iB,kBANNF,mBAAA,CAKKkB,SAAA,QAtCfC,WAAA,CAiC8BX,KAAA,CAAAY,YAAY,EAArBC,KAAK;yBAAhBrB,mBAAA,CAKK;MAL8BsB,GAAG,EAAED,KAAK,CAACE,OAAO,GAAGF,KAAK,CAACG;QAC5DtB,mBAAA,CAAyB,YAAAK,gBAAA,CAAlBc,KAAK,CAACI,IAAI,kBACjBvB,mBAAA,CAA4B,YAAAK,gBAAA,CAArBc,KAAK,CAACE,OAAO,kBACpBrB,mBAAA,CAAsC,YAAAK,gBAAA,CAA/Bc,KAAK,CAACA,KAAK,CAACK,OAAO,OAAM,GAAC,iBACjCxB,mBAAA,CAA0C,YAAAK,gBAAA,CAAnCoB,QAAA,CAAAC,UAAU,CAACP,KAAK,CAACG,SAAS,kB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}