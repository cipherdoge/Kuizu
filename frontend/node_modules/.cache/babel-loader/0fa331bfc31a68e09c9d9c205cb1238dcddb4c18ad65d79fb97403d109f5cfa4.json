{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"manage-quiz-container\"\n};\nconst _hoisted_2 = {\n  class: \"search-section\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 1\n};\nconst _hoisted_6 = {\n  class: \"results-list\"\n};\nconst _hoisted_7 = {\n  key: 0\n};\nconst _hoisted_8 = [\"onUpdate:modelValue\"];\nconst _hoisted_9 = {\n  key: 0\n};\nconst _hoisted_10 = [\"onUpdate:modelValue\"];\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = [\"onClick\"];\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[7] || (_cache[7] = _createElementVNode(\"h1\", null, \"Manage Quizzes\", -1 /* HOISTED */)), _createCommentVNode(\" Search Section \"), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event),\n    placeholder: \"Search users, subjects, or quizzes...\",\n    class: \"search-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.searchType = $event),\n    class: \"search-select\"\n  }, _cache[3] || (_cache[3] = [_createElementVNode(\"option\", {\n    value: \"users\"\n  }, \"Users\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"subjects\"\n  }, \"Subjects\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"quizzes\"\n  }, \"Quizzes\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.searchType]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.search && $options.search(...args)),\n    type: \"button\",\n    class: \"btn btn-primary\"\n  }, \"Search\")]), _createCommentVNode(\" Search Results \"), $data.searchPerformed ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [$data.searchResults.length ? (_openBlock(), _createElementBlock(\"h2\", _hoisted_4, \"Search Results\")) : (_openBlock(), _createElementBlock(\"p\", _hoisted_5, \"No results found for your query.\")), _createElementVNode(\"div\", _hoisted_6, [$data.searchType === 'quizzes' ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($data.searchResults, (result, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: result.id,\n      class: \"result-item\"\n    }, [_createElementVNode(\"p\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"ID:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(result.id), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"strong\", null, \"Remarks:\", -1 /* HOISTED */)), !result.editing ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, _toDisplayString(result.remarks), 1 /* TEXT */)) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n      key: 1,\n      \"onUpdate:modelValue\": $event => result.remarks = $event\n    }, null, 8 /* PROPS */, _hoisted_8)), [[_vModelText, result.remarks]])]), _createElementVNode(\"p\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"strong\", null, \"Chapter ID:\", -1 /* HOISTED */)), !result.editing ? (_openBlock(), _createElementBlock(\"span\", _hoisted_9, _toDisplayString(result.chapter_id), 1 /* TEXT */)) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n      key: 1,\n      \"onUpdate:modelValue\": $event => result.chapter_id = $event\n    }, null, 8 /* PROPS */, _hoisted_10)), [[_vModelText, result.chapter_id]])]), !result.editing ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: $event => $options.enableEdit(index),\n      class: \"btn btn-warning\"\n    }, \"Edit\", 8 /* PROPS */, _hoisted_11)) : _createCommentVNode(\"v-if\", true), result.editing ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 1,\n      onClick: $event => $options.saveEdit(index, result),\n      class: \"btn btn-success\"\n    }, \"Save\", 8 /* PROPS */, _hoisted_12)) : _createCommentVNode(\"v-if\", true), result.editing ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 2,\n      onClick: $event => $options.cancelEdit(index),\n      class: \"btn btn-secondary\"\n    }, \"Cancel\", 8 /* PROPS */, _hoisted_13)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteQuiz(result.id),\n      class: \"btn btn-danger\"\n    }, \"Delete\", 8 /* PROPS */, _hoisted_14)]);\n  }), 128 /* KEYED_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","_hoisted_2","_cache","$event","$data","searchQuery","placeholder","searchType","value","onClick","args","$options","search","type","searchPerformed","_hoisted_3","searchResults","length","_hoisted_4","_hoisted_5","_hoisted_6","_Fragment","_renderList","result","index","id","_createTextVNode","_toDisplayString","editing","_hoisted_7","remarks","_hoisted_8","_hoisted_9","chapter_id","_hoisted_10","enableEdit","_hoisted_11","saveEdit","_hoisted_12","cancelEdit","_hoisted_13","deleteQuiz","_hoisted_14"],"sources":["/home/ritvik/quiz_master_v2/Kuizu/frontend/src/components/ManageQuiz.vue"],"sourcesContent":["<template>\n  <div class=\"manage-quiz-container\">\n    <h1>Manage Quizzes</h1>\n\n    <!-- Search Section -->\n    <div class=\"search-section\">\n      <input\n        v-model=\"searchQuery\"\n        placeholder=\"Search users, subjects, or quizzes...\"\n        class=\"search-input\"\n      />\n      <select v-model=\"searchType\" class=\"search-select\">\n        <option value=\"users\">Users</option>\n        <option value=\"subjects\">Subjects</option>\n        <option value=\"quizzes\">Quizzes</option>\n      </select>\n      <button @click=\"search\" type=\"button\" class=\"btn btn-primary\">Search</button>\n    </div>\n\n    <!-- Search Results -->\n    <div v-if=\"searchPerformed\">\n      <h2 v-if=\"searchResults.length\">Search Results</h2>\n      <p v-else>No results found for your query.</p>\n      <div class=\"results-list\">\n        <template v-if=\"searchType === 'quizzes'\">\n          <div v-for=\"(result, index) in searchResults\" :key=\"result.id\" class=\"result-item\">\n            <p><strong>ID:</strong> {{ result.id }}</p>\n            <p><strong>Remarks:</strong> \n              <span v-if=\"!result.editing\">{{ result.remarks }}</span>\n              <input v-else v-model=\"result.remarks\" />\n            </p>\n            <p><strong>Chapter ID:</strong> \n              <span v-if=\"!result.editing\">{{ result.chapter_id }}</span>\n              <input v-else v-model=\"result.chapter_id\" />\n            </p>\n            <button v-if=\"!result.editing\" @click=\"enableEdit(index)\" class=\"btn btn-warning\">Edit</button>\n            <button v-if=\"result.editing\" @click=\"saveEdit(index, result)\" class=\"btn btn-success\">Save</button>\n            <button v-if=\"result.editing\" @click=\"cancelEdit(index)\" class=\"btn btn-secondary\">Cancel</button>\n            <button @click=\"deleteQuiz(result.id)\" class=\"btn btn-danger\">Delete</button>\n          </div>\n        </template>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      searchQuery: \"\",\n      searchType: \"subjects\",\n      searchResults: [],\n      searchPerformed: false,\n    };\n  },\n  methods: {\n    async search() {\n      if (!this.searchQuery.trim()) {\n        alert(\"Please enter a search query.\");\n        return;\n      }\n\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        alert(\"Authentication token missing. Please log in.\");\n        return;\n      }\n\n      try {\n        const response = await axios.get(\"/api/admin/search\", {\n          params: {\n            query: this.searchQuery,\n            type: this.searchType,\n          },\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        this.searchResults = response.data.map(quiz => ({\n          ...quiz,\n          editing: false, // Add an `editing` field to each quiz item\n        }));\n        this.searchPerformed = true;\n      } catch (error) {\n        console.error(\"Error during search:\", error);\n        this.handleError(error);\n      }\n    },\n    \n    enableEdit(index) {\n      this.searchResults[index].editing = true;\n    },\n\n    async saveEdit(index, result) {\n      try {\n        const token = localStorage.getItem(\"token\");\n        await axios.put(`/api/admin/quizzes/${result.id}`, {\n          remarks: result.remarks,\n          chapter_id: result.chapter_id,\n        }, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        this.searchResults[index].editing = false;\n      } catch (error) {\n        console.error(\"Error updating quiz:\", error);\n        this.handleError(error);\n      }\n    },\n\n    cancelEdit(index) {\n      this.searchResults[index].editing = false;\n      this.search(); // Refresh data from API to restore original values\n    },\n\n    async deleteQuiz(quizId) {\n      if (!confirm(\"Are you sure you want to delete this quiz?\")) return;\n\n      try {\n        const token = localStorage.getItem(\"token\");\n        await axios.delete(`/api/admin/deletequiz/${quizId}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        this.searchResults = this.searchResults.filter(quiz => quiz.id !== quizId);\n      } catch (error) {\n        console.error(\"Error deleting quiz:\", error);\n        this.handleError(error);\n      }\n    },\n\n    handleError(error) {\n      if (error.response?.status === 401) {\n        alert(\"Unauthorized access. Please log in again.\");\n      } else if (error.response?.status === 403) {\n        alert(\"Admin access required.\");\n      } else if (error.response?.status === 422) {\n        alert(\"Invalid search query or parameters.\");\n      } else {\n        alert(\"An error occurred. Please try again.\");\n      }\n    },\n  },\n};\n</script>\n\n<style>\n.manage-quiz-container {\n  padding: 20px;\n}\n\n.search-section {\n  margin-bottom: 20px;\n}\n\n.search-input {\n  padding: 5px;\n  margin-right: 10px;\n}\n\n.search-select {\n  margin-right: 10px;\n}\n\n.results-list {\n  margin-top: 20px;\n}\n\n.result-item {\n  border: 1px solid #ddd;\n  padding: 10px;\n  margin-bottom: 10px;\n}\n\n.btn {\n  margin-right: 5px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}