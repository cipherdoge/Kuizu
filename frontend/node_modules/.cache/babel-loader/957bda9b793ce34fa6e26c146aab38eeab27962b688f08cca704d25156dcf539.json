{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"user-dashboard\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  class: \"chart-container\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 1\n};\nconst _hoisted_6 = {\n  class: \"chart-container\"\n};\nconst _hoisted_7 = {\n  key: 0\n};\nconst _hoisted_8 = {\n  key: 1\n};\nexport function render(_ctx, _cache) {\n  const _component_BarChart = _resolveComponent(\"BarChart\");\n  const _component_LineChart = _resolveComponent(\"LineChart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h1\", null, \"User Dashboard\", -1 /* HOISTED */)), _createCommentVNode(\" Displaying User Statistics \"), _ctx.userStats ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"Statistics\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, \"Total Attempts: \" + _toDisplayString(_ctx.userStats.total_attempts), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Average Score: \" + _toDisplayString(_ctx.userStats.average_score.toFixed(2)) + \"%\", 1 /* TEXT */), _createCommentVNode(\" Adding a Bar Chart for Statistics \"), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_BarChart, {\n    data: _ctx.statisticsChartData\n  }, null, 8 /* PROPS */, [\"data\"])]), _createCommentVNode(\" Displaying Recent Attempts \"), _cache[2] || (_cache[2] = _createElementVNode(\"h3\", null, \"Recent Attempts\", -1 /* HOISTED */)), _ctx.userStats.recent_attempts.length ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.userStats.recent_attempts, attempt => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: attempt.quiz_id\n    }, [_createElementVNode(\"strong\", null, _toDisplayString(attempt.chapter_name) + \":\", 1 /* TEXT */), _createTextVNode(\" Score: \" + _toDisplayString(attempt.score) + \"% \", 1 /* TEXT */), _cache[0] || (_cache[0] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createTextVNode(\" Date: \" + _toDisplayString(attempt.attempt_date), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_5, \"No recent attempts\")), _createCommentVNode(\" Adding a Line Chart for Recent Attempts Scores \"), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_LineChart, {\n    data: _ctx.recentAttemptsChartData\n  }, null, 8 /* PROPS */, [\"data\"])])])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Error or Loading State \"), _createElementVNode(\"div\", null, [_ctx.loading ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, \"Loading...\")) : _ctx.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, _toDisplayString(_ctx.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","_ctx","userStats","_hoisted_2","_toDisplayString","total_attempts","average_score","toFixed","_hoisted_3","_createVNode","_component_BarChart","data","statisticsChartData","recent_attempts","length","_hoisted_4","_Fragment","_renderList","attempt","quiz_id","chapter_name","_createTextVNode","score","attempt_date","_hoisted_5","_hoisted_6","_component_LineChart","recentAttemptsChartData","loading","_hoisted_7","error","_hoisted_8"],"sources":["/home/ritvik/quiz_master_v2/Kuizu/frontend/src/components/UserDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"user-dashboard\">\n    <h1>User Dashboard</h1>\n    \n    <!-- Displaying User Statistics -->\n    <div v-if=\"userStats\">\n      <h2>Statistics</h2>\n      <p>Total Attempts: {{ userStats.total_attempts }}</p>\n      <p>Average Score: {{ userStats.average_score.toFixed(2) }}%</p>\n\n      <!-- Adding a Bar Chart for Statistics -->\n      <div class=\"chart-container\">\n        <BarChart :data=\"statisticsChartData\" />\n      </div>\n\n      <!-- Displaying Recent Attempts -->\n      <h3>Recent Attempts</h3>\n      <ul v-if=\"userStats.recent_attempts.length\">\n        <li v-for=\"attempt in userStats.recent_attempts\" :key=\"attempt.quiz_id\">\n          <strong>{{ attempt.chapter_name }}:</strong> Score: {{ attempt.score }}% \n          <br>\n          Date: {{ attempt.attempt_date }}\n        </li>\n      </ul>\n      <p v-else>No recent attempts</p>\n\n      <!-- Adding a Line Chart for Recent Attempts Scores -->\n      <div class=\"chart-container\">\n        <LineChart :data=\"recentAttemptsChartData\" />\n      </div>\n    </div>\n    \n    <!-- Error or Loading State -->\n    <div v-else>\n      <p v-if=\"loading\">Loading...</p>\n      <p v-else-if=\"error\">{{ error }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { ref, onMounted } from 'vue';\nimport { Bar, Line } from 'vue-chartjs'; // Import Bar and Line from vue-chartjs\nimport { defineComponent } from 'vue';\nimport { Line } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, Tooltip, Legend, LineElement, PointElement, CategoryScale, LinearScale } from 'chart.js';\n\n// Register Chart.js components\nChartJS.register(\n  Title,\n  Tooltip,\n  Legend,\n  LineElement,\n  PointElement,\n  CategoryScale,\n  LinearScale\n);\n\nexport default defineComponent({\n  name: 'UserDashboard',\n  components: {\n    BarChart: Bar,\n    LineChart: Line\n  },\n  setup() {\n    const userStats = ref(null);\n    const loading = ref(true);\n    const error = ref('');\n\n    const statisticsChartData = ref({\n      labels: ['Total Attempts', 'Average Score'],\n      datasets: [{\n        label: 'User Stats',\n        data: [0, 0], // Default data, will be updated after fetching\n        backgroundColor: ['#42A5F5', '#66BB6A'],\n        borderColor: ['#42A5F5', '#66BB6A'],\n        borderWidth: 1\n      }]\n    });\n\n    const recentAttemptsChartData = ref({\n      labels: [], // Quiz dates will be added here\n      datasets: [{\n        label: 'Scores of Recent Attempts',\n        data: [], // Scores will be added here\n        fill: false,\n        borderColor: '#FF5733',\n        tension: 0.1\n      }]\n    });\n\n    // Fetch user dashboard data\n    const fetchUserDashboard = async () => {\n      console.log('Fetching user dashboard...');\n      const token = localStorage.getItem('token');\n\n      if (!token) {\n        error.value = 'No token found. Please log in again.';\n        loading.value = false;\n        return;\n      }\n\n      try {\n        const response = await axios.get('/api/user/dashboard/summary', {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        console.log('Response:', response);\n\n        userStats.value = {\n          ...response.data.statistics,\n          recent_attempts: response.data.recent_attempts\n        };\n\n        // Update the statistics chart data\n        statisticsChartData.value.datasets[0].data = [\n          userStats.value.total_attempts,\n          userStats.value.average_score\n        ];\n\n        // Update the recent attempts chart data\n        recentAttemptsChartData.value.labels = userStats.value.recent_attempts.map(attempt => attempt.attempt_date);\n        recentAttemptsChartData.value.datasets[0].data = userStats.value.recent_attempts.map(attempt => attempt.score);\n\n        loading.value = false;\n      } catch (err) {\n        error.value = 'Failed to load user dashboard data. Please try again later.';\n        loading.value = false;\n      }\n    };\n\n    // Call fetchUserDashboard when the component is mounted\n    onMounted(fetchUserDashboard);\n\n    return { userStats, loading, error, statisticsChartData, recentAttemptsChartData };\n  },\n});\n</script>\n\n<style scoped>\n.user-dashboard {\n  padding: 20px;\n  max-width: 800px;\n  margin: auto;\n}\n\nh1 {\n  font-size: 2em;\n  margin-bottom: 20px;\n}\n\nh2, h3 {\n  margin-top: 20px;\n  font-size: 1.5em;\n}\n\nul {\n  list-style-type: none;\n  padding-left: 0;\n}\n\nli {\n  margin-bottom: 10px;\n}\n\n.chart-container {\n  margin-top: 20px;\n  height: 300px;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EAD7BC,GAAA;AAAA;;EAWWD,KAAK,EAAC;AAAiB;;EAXlCC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EA2BWD,KAAK,EAAC;AAAiB;;EA3BlCC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;;;uBACEC,mBAAA,CAoCM,OApCNC,UAoCM,G,0BAnCJC,mBAAA,CAAuB,YAAnB,gBAAc,sBAElBC,mBAAA,gCAAmC,EACxBC,IAAA,CAAAC,SAAS,I,cAApBL,mBAAA,CAyBM,OA9BVM,UAAA,G,0BAMMJ,mBAAA,CAAmB,YAAf,YAAU,sBACdA,mBAAA,CAAqD,WAAlD,kBAAgB,GAAAK,gBAAA,CAAGH,IAAA,CAAAC,SAAS,CAACG,cAAc,kBAC9CN,mBAAA,CAA+D,WAA5D,iBAAe,GAAAK,gBAAA,CAAGH,IAAA,CAAAC,SAAS,CAACI,aAAa,CAACC,OAAO,OAAM,GAAC,iBAE3DP,mBAAA,uCAA0C,EAC1CD,mBAAA,CAEM,OAFNS,UAEM,GADJC,YAAA,CAAwCC,mBAAA;IAA7BC,IAAI,EAAEV,IAAA,CAAAW;EAAmB,kC,GAGtCZ,mBAAA,gCAAmC,E,0BACnCD,mBAAA,CAAwB,YAApB,iBAAe,sBACTE,IAAA,CAAAC,SAAS,CAACW,eAAe,CAACC,MAAM,I,cAA1CjB,mBAAA,CAMK,MAvBXkB,UAAA,I,kBAkBQlB,mBAAA,CAIKmB,SAAA,QAtBbC,WAAA,CAkB8BhB,IAAA,CAAAC,SAAS,CAACW,eAAe,EAApCK,OAAO;yBAAlBrB,mBAAA,CAIK;MAJ6CD,GAAG,EAAEsB,OAAO,CAACC;QAC7DpB,mBAAA,CAA4C,gBAAAK,gBAAA,CAAjCc,OAAO,CAACE,YAAY,IAAG,GAAC,iBAnB7CC,gBAAA,CAmBsD,UAAQ,GAAAjB,gBAAA,CAAGc,OAAO,CAACI,KAAK,IAAG,IACvE,iB,0BAAAvB,mBAAA,CAAI,sCApBdsB,gBAAA,CAoBc,SACE,GAAAjB,gBAAA,CAAGc,OAAO,CAACK,YAAY,iB;qDAGjC1B,mBAAA,CAAgC,KAxBtC2B,UAAA,EAwBgB,oBAAkB,IAE5BxB,mBAAA,oDAAuD,EACvDD,mBAAA,CAEM,OAFN0B,UAEM,GADJhB,YAAA,CAA6CiB,oBAAA;IAAjCf,IAAI,EAAEV,IAAA,CAAA0B;EAAuB,kC,sBAK7C9B,mBAAA,CAGMmB,SAAA;IApCVpB,GAAA;EAAA,IAgCII,mBAAA,4BAA+B,EAC/BD,mBAAA,CAGM,cAFKE,IAAA,CAAA2B,OAAO,I,cAAhB/B,mBAAA,CAAgC,KAlCtCgC,UAAA,EAkCwB,YAAU,KACd5B,IAAA,CAAA6B,KAAK,I,cAAnBjC,mBAAA,CAAoC,KAnC1CkC,UAAA,EAAA3B,gBAAA,CAmC8BH,IAAA,CAAA6B,KAAK,oBAnCnC9B,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}