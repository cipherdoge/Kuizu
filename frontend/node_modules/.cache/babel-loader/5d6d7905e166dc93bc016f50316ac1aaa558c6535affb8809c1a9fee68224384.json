{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"quiz-selector\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loading\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"selector-container\"\n};\nconst _hoisted_4 = {\n  class: \"select-group\"\n};\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = {\n  class: \"select-group\"\n};\nconst _hoisted_7 = [\"disabled\"];\nconst _hoisted_8 = [\"value\"];\nconst _hoisted_9 = {\n  class: \"select-group\"\n};\nconst _hoisted_10 = [\"disabled\"];\nconst _hoisted_11 = [\"value\"];\nconst _hoisted_12 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[12] || (_cache[12] = _createElementVNode(\"h2\", null, \"Select a Quiz\", -1 /* HOISTED */)), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"Loading...\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createCommentVNode(\" Subject Selection \"), _createElementVNode(\"div\", _hoisted_4, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"subject\"\n  }, \"Select Subject:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.selectedSubject = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => $setup.loadChapters && $setup.loadChapters(...args)),\n    id: \"subject\"\n  }, [_cache[6] || (_cache[6] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"Choose a subject\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.subjects, subject => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: subject.id,\n      value: subject.id\n    }, _toDisplayString(subject.name), 9 /* TEXT, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $setup.selectedSubject]])]), _createCommentVNode(\" Chapter Selection \"), _createElementVNode(\"div\", _hoisted_6, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    for: \"chapter\"\n  }, \"Select Chapter:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.selectedChapter = $event),\n    onChange: _cache[3] || (_cache[3] = (...args) => $setup.loadQuizzes && $setup.loadQuizzes(...args)),\n    id: \"chapter\",\n    disabled: !$setup.selectedSubject\n  }, [_cache[8] || (_cache[8] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"Choose a chapter\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.chapters, chapter => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: chapter.id,\n      value: chapter.id\n    }, _toDisplayString(chapter.name), 9 /* TEXT, PROPS */, _hoisted_8);\n  }), 128 /* KEYED_FRAGMENT */))], 40 /* PROPS, NEED_HYDRATION */, _hoisted_7), [[_vModelSelect, $setup.selectedChapter]])]), _createCommentVNode(\" Quiz Selection \"), _createElementVNode(\"div\", _hoisted_9, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", {\n    for: \"quiz\"\n  }, \"Select Quiz:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.selectedQuiz = $event),\n    id: \"quiz\",\n    disabled: !$setup.selectedChapter\n  }, [_cache[10] || (_cache[10] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"Choose a quiz\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.quizzes, quiz => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: quiz.id,\n      value: quiz.id\n    }, \" Quiz \" + _toDisplayString(quiz.id) + \" - \" + _toDisplayString($setup.formatDate(quiz.date_of_quiz)) + \" (\" + _toDisplayString($setup.formatDuration(quiz.time_duration)) + \") \", 9 /* TEXT, PROPS */, _hoisted_11);\n  }), 128 /* KEYED_FRAGMENT */))], 8 /* PROPS */, _hoisted_10), [[_vModelSelect, $setup.selectedQuiz]])])])), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $setup.startQuiz && $setup.startQuiz(...args)),\n    disabled: !$setup.selectedQuiz,\n    class: \"take-quiz-btn\"\n  }, \" Take Quiz \", 8 /* PROPS */, _hoisted_12)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$setup","loading","_hoisted_2","_hoisted_3","_createCommentVNode","_hoisted_4","for","_cache","$event","selectedSubject","onChange","args","loadChapters","id","value","_Fragment","_renderList","subjects","subject","name","_hoisted_5","_hoisted_6","selectedChapter","loadQuizzes","disabled","chapters","chapter","_hoisted_8","_hoisted_7","_hoisted_9","selectedQuiz","quizzes","quiz","_toDisplayString","formatDate","date_of_quiz","formatDuration","time_duration","_hoisted_11","_hoisted_10","onClick","startQuiz","_hoisted_12"],"sources":["/home/ritvik/quiz_master_v2/Kuizu/frontend/src/components/SelectQuiz.vue"],"sourcesContent":["<template>\n  <div class=\"quiz-selector\">\n    <h2>Select a Quiz</h2>\n\n    <div v-if=\"loading\" class=\"loading\">Loading...</div>\n\n    <div v-else class=\"selector-container\">\n      <!-- Subject Selection -->\n      <div class=\"select-group\">\n        <label for=\"subject\">Select Subject:</label>\n        <select v-model=\"selectedSubject\" @change=\"loadChapters\" id=\"subject\">\n          <option value=\"\">Choose a subject</option>\n          <option v-for=\"subject in subjects\" :key=\"subject.id\" :value=\"subject.id\">\n            {{ subject.name }}\n          </option>\n        </select>\n      </div>\n\n      <!-- Chapter Selection -->\n      <div class=\"select-group\">\n        <label for=\"chapter\">Select Chapter:</label>\n        <select v-model=\"selectedChapter\" @change=\"loadQuizzes\" id=\"chapter\" :disabled=\"!selectedSubject\">\n          <option value=\"\">Choose a chapter</option>\n          <option v-for=\"chapter in chapters\" :key=\"chapter.id\" :value=\"chapter.id\">\n            {{ chapter.name }}\n          </option>\n        </select>\n      </div>\n\n      <!-- Quiz Selection -->\n      <div class=\"select-group\">\n        <label for=\"quiz\">Select Quiz:</label>\n        <select v-model=\"selectedQuiz\" id=\"quiz\" :disabled=\"!selectedChapter\">\n          <option value=\"\">Choose a quiz</option>\n          <option v-for=\"quiz in quizzes\" :key=\"quiz.id\" :value=\"quiz.id\">\n            Quiz {{ quiz.id }} - {{ formatDate(quiz.date_of_quiz) }} ({{ formatDuration(quiz.time_duration) }})\n          </option>\n        </select>\n      </div>\n    </div>\n\n    <button \n      @click=\"startQuiz\" \n      :disabled=\"!selectedQuiz\" \n      class=\"take-quiz-btn\"\n    >\n      Take Quiz\n    </button>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport axios from 'axios'\n\nexport default {\n  name: 'UserHome',\n  setup() {\n    const router = useRouter()\n    const subjects = ref([])\n    const chapters = ref([])\n    const quizzes = ref([])\n    const selectedSubject = ref('')\n    const selectedChapter = ref('')\n    const selectedQuiz = ref('')\n    const loading = ref(false) // Loading state\n\n    const loadSubjects = async () => {\n      loading.value = true\n      try {\n        const response = await axios.get('/api/subjects')\n        subjects.value = response.data\n      } catch (error) {\n        console.error('Error loading subjects:', error)\n        alert('Failed to load subjects. Please try again later.')\n      } finally {\n        loading.value = false\n      }\n    }\n\n    const loadChapters = async () => {\n      if (!selectedSubject.value) {\n        chapters.value = []\n        return\n      }\n      loading.value = true\n      try {\n        const response = await axios.get(`/api/subjects/${selectedSubject.value}/chapters`)\n        chapters.value = response.data\n        selectedChapter.value = ''\n        selectedQuiz.value = ''\n      } catch (error) {\n        console.error('Error loading chapters:', error)\n        alert('Failed to load chapters. Please try again later.')\n      } finally {\n        loading.value = false\n      }\n    }\n\n    const loadQuizzes = async () => {\n      if (!selectedChapter.value) {\n        quizzes.value = []\n        return\n      }\n      loading.value = true\n      try {\n        const response = await axios.get(`/api/chapters/${selectedChapter.value}/quizzes`)\n        quizzes.value = response.data\n        selectedQuiz.value = ''\n      } catch (error) {\n        console.error('Error loading quizzes:', error)\n        alert('Failed to load quizzes. Please try again later.')\n      } finally {\n        loading.value = false\n      }\n    }\n\n    const formatDate = (dateString) => {\n      return new Date(dateString).toLocaleDateString()\n    }\n\n    const formatDuration = (duration) => {\n      const [hours, minutes] = duration.split(':')\n      return `${hours} hr ${minutes} min`\n    }\n\n    const startQuiz = () => {\n      if (selectedQuiz.value) {\n        router.push(`/quiz/${selectedQuiz.value}`)\n      }\n    }\n\n    onMounted(() => {\n      loadSubjects()\n    })\n\n    return {\n      subjects,\n      chapters,\n      quizzes,\n      selectedSubject,\n      selectedChapter,\n      selectedQuiz,\n      loading,\n      loadChapters,\n      loadQuizzes,\n      formatDate,\n      formatDuration,\n      startQuiz\n    }\n  }\n}\n</script>\n\n<style scoped>\n.quiz-selector {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.loading {\n  text-align: center;\n  font-size: 18px;\n  color: #888;\n}\n\n.selector-container {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-bottom: 30px;\n}\n\n.select-group {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\nselect {\n  padding: 8px;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n  font-size: 16px;\n}\n\nselect:disabled {\n  background-color: #f5f5f5;\n  cursor: not-allowed;\n}\n\n.take-quiz-btn {\n  padding: 12px 24px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 16px;\n  transition: background-color 0.3s;\n}\n\n.take-quiz-btn:hover {\n  background-color: #45a049;\n}\n\n.take-quiz-btn:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}